#!/usr/bin/ruby

require 'clamp'
require 'colorize'
require 'net/ping'
require_relative 'lib/db'

class PreParser < Clamp::Command
  option ["-h", "--help"], :flag, "be helpful"
  option ["-v", "--verbose"], :flag, "be verbose"

  parameter "HOST", "Target host"
end

#Test for host connectivity using ICMP PING
def online?(host)
  check = Net::Ping::External.new(host)
  check.ping?
end

#Update entry in alerts DB
def update(host,ip,status)
  alertsdb = SQLite3::Database.new "alerts.db"
  alertsdb.execute("INSERT into alerts (name,ip,status)
                    VALUES (?, ?, ?)", [host, ip, status])
end

#---Main beigns--------------------------------------------
preparser = PreParser.new File.basename($0), {}
begin
  preparser.parse ARGV
rescue
end

if preparser.help?
  puts "2017 Comprehensive Simple Alerter"
  puts "monitor host info <host/ip>\n\n"
end

if File.size("monitor.db") == 0
  puts "Aborting you need to add new hosts"
end

#Open MonitorDB
monitordb = SQLite3::Database.new "monitor.db"
monitordb.execute( "select name,ip from hosts" ) do |row|
  #p row
  #puts "Host #{row[0]} is online" if online?(row[0])
  #puts "Host #{row[0]} is offline" if !online?(row[0])
  #
  if online?(row[1])
    puts "Host #{row[0]} (#{row[1]}) is "+"online".green
    update(row[0], row[1], 1)
  else
    puts "Host #{row[0]} (#{row[1]}) is "+"offline".red
    update(row[0], row[1], 0)
  end
end


